<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hzfh.rest_p2p.customer.mapper.PaymentMoneyChangeMapper">
	<resultMap type="com.hzfh.api.p2pCustomer.model.PaymentMoneyChange" id="resultMapPaymentMoneyChange">
		<result property="id" column="id"/>
		<result property="customerNo" column="customer_no"/>
		<result property="moneyChangeType" column="money_change_type"/>
		<result property="moneyWithdraw" column="money_withdraw"/>
		<result property="refSn" column="ref_sn"/>
		<result property="orderNo" column="order_no"/>
		<result property="timeCreate" column="time_create" jdbcType="TIMESTAMP" javaType="java.sql.Timestamp"/>
		<result property="note" column="note"/>
		<result property="status" column="status"/>
		<result property="moneyAmount" column="money_amount"/>
		<result property="availableAmount" column="available_amount"/>
		<result property="transaction_time" column="transaction_time"/>	
	</resultMap>
	<select id="getListByCustomerNoAndChangeType" parameterType="com.hzfh.api.p2pCustomer.model.query.PaymentMoneyChangeCondition" resultMap="resultMapPaymentMoneyChange" >
		SELECT id,customer_no,money_change_type,money_withdraw,ref_sn,order_no,time_create,note,status,money_amount,available_amount
		FROM payment_money_change WHERE customer_no = #{customerNo}
		<if test = "moneyChangeType != null and moneyChangeType != ''">and money_change_type = ${moneyChangeType}</if>
	</select>
	<select id="getListByCustomerNoAndChangeTypeApp" parameterType="com.hzfh.api.p2pCustomer.model.query.PaymentMoneyChangeCondition" resultType="map" >
		SELECT id,customer_no as customerNo,money_change_type as moneyChangeType,money_withdraw as moneyWithdraw,time_create as timeCreate,note,status,money_amount as moneyAmount,
		available_amount as availableAmount FROM payment_money_change
		WHERE customer_no = #{customerNo} and money_change_type not in (21,23,24,25,29)
		<if test = "moneyChangeType != null and moneyChangeType != ''">and money_change_type = #{moneyChangeType}</if>
		ORDER BY time_create DESC,id desc
		LIMIT ${startIndex},${pageSize}
	</select>
	<select id="getTotalCountApp" resultType="long" parameterType="com.hzfh.api.p2pCustomer.model.query.PaymentMoneyChangeCondition" >
		SELECT count(1) FROM payment_money_change
		WHERE customer_no = #{customerNo}
		<if test = "moneyChangeType != null and moneyChangeType != ''">and money_change_type = #{moneyChangeType}</if>
	</select>
	<select id="getList" resultMap="resultMapPaymentMoneyChange">
		SELECT id,customer_no,money_change_type,money_withdraw,ref_sn,order_no,time_create,note,status,money_amount,available_amount
		FROM payment_money_change
	</select>
	<select id="getPagingList" resultMap="resultMapPaymentMoneyChange" parameterType="com.hzfh.api.p2pCustomer.model.query.PaymentMoneyChangeCondition" statementType="STATEMENT">
		SELECT id,customer_no,money_change_type,money_withdraw,ref_sn,order_no,time_create,note,status,money_amount,available_amount FROM payment_money_change where 1=1
		<if test="customerNo!=0">and customer_no=${customerNo}</if>
		<if test="moneyChangeType !='' and moneyChangeType!= null"> and money_change_type in(${moneyChangeType})</if>
		ORDER BY
		<foreach item="item" collection="sortItemList" separator=",">
			${item.sortFeild} ${item.sortType}
		</foreach>
		LIMIT ${startIndex},${pageSize}
	</select>
	<select id="getTotalCount" resultType="long" parameterType="com.hzfh.api.p2pCustomer.model.query.PaymentMoneyChangeCondition" statementType="STATEMENT">
		SELECT count(1) FROM payment_money_change where 1=1
		<if test="customerNo!=0">and customer_no=${customerNo}</if>
		<if test="moneyChangeType !='' and moneyChangeType!= null"> and money_change_type in (${moneyChangeType})</if>
	</select>
	<select id="getInfo" resultMap="resultMapPaymentMoneyChange" parameterType="int">
		SELECT id,customer_no,money_change_type,money_withdraw,ref_sn,order_no,time_create,note,status,money_amount,available_amount FROM payment_money_change where id=#{id}
	</select>
	<select id="getInfoApp" resultType="map" parameterType="int">
		SELECT id,customer_no as customerNo,money_change_type as moneyChangeType,money_withdraw as moneyWithdraw,time_create as timeCreate,note,status,money_amount as moneyAmount,
		available_amount as availableAmount FROM payment_money_change
		WHERE id = #{id}
	</select>
	<select id="getInfoByMoneyChangeTypeAndRefSn" resultMap="resultMapPaymentMoneyChange">
		SELECT id,customer_no,money_change_type,money_withdraw,ref_sn,order_no,time_create,note,status,money_amount,available_amount 
		FROM payment_money_change where money_change_type=#{moneyChangeRecharge} and ref_sn=#{requestNo}
	</select>
	<insert id="add" parameterType="com.hzfh.api.p2pCustomer.model.PaymentMoneyChange" useGeneratedKeys="true" keyProperty="id">
		insert into payment_money_change
		(customer_no,money_change_type,money_withdraw,ref_sn,order_no,time_create,note,status,money_amount,available_amount,source_account,target_account)
		values
		(#{customerNo},#{moneyChangeType},#{moneyWithdraw},#{refSn},#{orderNo},current_timestamp(),#{note},#{status},#{moneyAmount},#{availableAmount},#{sourceAccount},#{targetAccount})
	</insert>
	<update id="update" parameterType="com.hzfh.api.p2pCustomer.model.PaymentMoneyChange">
		update payment_money_change set 
		customer_no=#{customerNo},money_change_type=#{moneyChangeType},money_withdraw=#{moneyWithdraw},ref_sn=#{refSn},order_no=#{orderNo},time_create=#{timeCreate},note=#{note},status=#{status},money_amount=#{moneyAmount},available_amount=#{availableAmount}
		where id=#{id}
	</update>
	<delete id="delete" parameterType="int">
		delete from payment_money_change where id = #{id}
	</delete>
	<select id="isMonthFirstWithdraw" resultMap="resultMapPaymentMoneyChange">
		SELECT id,customer_no,money_change_type,money_withdraw,ref_sn,order_no,time_create,note,status,money_amount,available_amount
		FROM payment_money_change
		where 1=1
		and customer_no=#{customerNo}
		and money_change_type = 3
		and STATUS != 2
		and date_format(time_create,'%Y-%m')=date_format(now(),'%Y-%m')
	</select>
	<select id="getTodayRechargeAmount" resultMap="resultMapPaymentMoneyChange">
		SELECT id,customer_no,money_change_type,money_withdraw,ref_sn,order_no,time_create,note,status,money_amount,available_amount
		FROM payment_money_change
		where 1=1		
		and customer_no=#{customerNo}
		and money_change_type=1
		and STATUS=1
		and date_format(time_create,'%Y-%m-%d')=date_format(now(),'%Y-%m-%d')
	</select>
	
	<select id="getPaymentChangeBySn" resultMap="resultMapPaymentMoneyChange">
		SELECT id,customer_no,money_change_type,money_withdraw,ref_sn,order_no,time_create,note,status,money_amount,available_amount
		FROM payment_money_change where ref_sn = #{sn}
	</select>
	
	<update id="updateStatusAndTransactionTime" >
		UPDATE payment_money_change set `status` = #{status} ,transaction_time =#{transactionTime}  WHERE ref_sn = #{sn}
	</update>
	
	<update id="updateMoneyChangeAmount" >
		UPDATE payment_money_change set money_amount = money_amount - #{amount}  WHERE ref_sn = #{sn}
	</update>
		
</mapper>