<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hzfh.rest_p2p.customer.mapper.CustomerAwardRelationshipMapper">
  <resultMap id="resultMapCustomerAwardRelationship" type="com.hzfh.api.p2pCustomer.model.CustomerAwardRelationship">
		<result property="id" column="id"/>
		<result property="customerId" column="customer_id"/>
		<result property="awardId" column="award_id"/>
		<result property="isValid" column="is_valid"/>
		<result property="status" column="status"/>
		<result property="type" column="type"/>
		<result property="origin" column="origin"/>
		<result property="ruleId" column="rule_id"/>
		<result property="operationType" column="operation_type"/>
		<result property="operationUser" column="operation_user"/>
		<result property="effectTime" column="effect_time" jdbcType="TIMESTAMP" javaType="java.sql.Timestamp"/>
		<result property="gainTime" column="gain_time" jdbcType="TIMESTAMP" javaType="java.sql.Timestamp"/>
		<result property="overTime" column="over_time" jdbcType="TIMESTAMP" javaType="java.sql.Timestamp"/>
		<result property="useTime" column="use_time" jdbcType="TIMESTAMP" javaType="java.sql.Timestamp"/>
  </resultMap>
  
  <sql id="columnList">
    id,customer_id as customerId, award_id as awardId, is_valid as isValid, status, type, origin,rule_id as ruleId ,operation_type as operationType, operation_user as operationUser ,effect_time as  effectTime ,gain_time as gainTime, over_time as overTime, use_time as useTime  
  </sql>

<insert id="add" parameterType="com.hzfh.api.p2pCustomer.model.CustomerAwardRelationship" useGeneratedKeys="true" keyProperty="id">
		insert into customer_award_relationship
		(customer_id,award_id,is_valid,status,type,origin,rule_id,operation_type,operation_user,effect_time,gain_time,over_time,use_time)
		values
		(#{customerId},#{awardId},#{isValid},#{status},#{type},#{origin},#{ruleId},#{operationType},#{operationUser},#{effectTime},#{gainTime},#{overTime},#{useTime})
	</insert>
  <select id="getInfo" resultMap="resultMapCustomerAwardRelationship">
  select 
  <include refid="columnList" />
   from customer_award_relationship  where id = #{id}
  </select> 
  
  <select id="searchSumAwardValue" resultType = 'decimal'>
  	SELECT sum(cr.award_value) FROM customer_award_relationship crr 
  	LEFT JOIN customer_award cr ON cr.id = crr.award_id WHERE crr.id IN (#{awardRelationshipId});
  </select> 
  
   <update id="updateBySelect" parameterType="com.hzfh.api.p2pCustomer.model.CustomerAwardRelationship">
    update customer_award_relationship
    <set>
      <if test="customerId != null">
        customer_id = #{customerId},
      </if>
      <if test="awardId != null">
        award_id = #{awardId},
      </if>
      <if test="isValid != null">
        is_valid = #{isValid},
      </if>
      <if test="status != null">
        status = #{status},
      </if>
      <if test="type != null">
        type = #{type},
      </if>
      <if test="gainTime != null">
        gain_time = #{gainTime},
      </if>
      <if test="overTime != null">
        over_time = #{overTime},
      </if>
      <if test="useTime != null">
        use_time = #{useTime},
      </if>
    </set>
    where id = #{id}
  </update>
  
  <select id="searchCustomerAward" resultType="map" >
    SELECT ca.type AS type, car.`status` AS status, ca.award_value AS awardValue, ca.first_invest AS firstInvest, ca.product_scope AS productScope, DATE_FORMAT(car.gain_time,'%Y-%m-%d %H:%i:%s') AS gainTime, DATE_FORMAT(car.over_time,'%Y-%m-%d %H:%i:%s') AS overTime,ca.name as name,car.effect_time as effect_time,ca.description as description,  ca.award_value*IFNULL(ca.rate_value, 0)  as useValue
    FROM customer_award_relationship car
  	LEFT JOIN customer_award ca ON car.award_id = ca.id
  	WHERE customer_id = #{customerId} 
  	AND is_valid = #{isValid}
  	<if test="overTime != null">
  	AND over_time >= #{overTime}
  	</if>
  	<if test="awardType!=null and awardType!=0">
  	and ca.type= #{awardType}
  	</if>
  	<if test="useStatus == 0">
  	and car.status=0 
  	and car.over_time>current_timestamp()
    and current_timestamp()>car.effect_time
  	</if>
  	<if test="useStatus == 1">
  	and car.status=2 
  	</if>
  	<if test="useStatus == 2">
  	and car.status=0 
  	and current_timestamp()>car.over_time
  	</if>
  	<if test="useStatus == 3">
  	and car.status=1 
  	</if>
  	<!-- ORDER BY car.`status` ASC, car.over_time ASC -->
  	order by car.id asc
  </select>
  <select id="searchCustomerAwardIncome" resultType="decimal" >
  	SELECT sum(ca.award_value) FROM customer_award_relationship car LEFT JOIN customer_award ca ON ca.id = car.award_id WHERE 
  	customer_id = #{customerId} 
  	AND is_valid = #{isValid}
	<if test="awardType!=null and awardType!=0">
  	and ca.type= #{awardType}
  	</if>
  	<if test="useStatus == 0">
  	and car.status=0 
  	and car.over_time>current_timestamp()
    and current_timestamp()>car.effect_time
  	</if>
  	<if test="useStatus == 1">
  	and car.status!=0 
  	</if>
  	<if test="useStatus == 2">
  	and car.status=0 
  	and current_timestamp()>car.over_time
  	</if>
  </select>
  
  <select id="searchCustomerAwardByType" resultType="map" >
   select * from  (SELECT ca.type AS type, car.`status` AS status, ca.award_value AS awardValue, ca.first_invest AS firstInvest, ca.product_scope AS productScope, DATE_FORMAT(car.gain_time,'%Y-%m-%d %H:%i:%s') AS gainTime, car.over_time AS overTime,ca.name as name,car.effect_time as effect_time,ca.description as description,  ca.award_value*IFNULL(ca.rate_value, 0)  as useValue
    FROM customer_award_relationship car
  	LEFT JOIN customer_award ca ON car.award_id = ca.id
  	WHERE customer_id = #{customerId} 
  	AND is_valid = 1
  	and car.over_time>current_timestamp()	
  	<if test="type != null">
  	AND ca.type = #{type}
  	</if>
  	ORDER BY car.`status` ASC, car.over_time ASC,
  	car.id asc) aa
  	union all
  	select * from (SELECT ca.type AS type, car.`status` AS status, ca.award_value AS awardValue, ca.first_invest AS firstInvest, ca.product_scope AS productScope, DATE_FORMAT(car.gain_time,'%Y-%m-%d %H:%i:%s') AS gainTime, car.over_time AS overTime,ca.name as name,car.effect_time as effect_time,ca.description as description,  ca.award_value*IFNULL(ca.rate_value, 0)  as useValue
    FROM customer_award_relationship car
  	LEFT JOIN customer_award ca ON car.award_id = ca.id
  	WHERE customer_id = #{customerId} 
  	AND is_valid = 1
  	and car.over_time &lt;current_timestamp()	
  	<if test="type != null">
  	AND ca.type = #{type}
  	</if>
  	ORDER BY car.`status` ASC, car.over_time ASC,
  	car.id asc) bb
  </select>

  <select id="searchInvestAward" resultType="map">
	SELECT car.id AS id, car.type AS type, ca.award_value AS awardValue, ca.description AS description, ca.first_invest AS firstInvest, ca.product_scope AS productScope, DATE_FORMAT(car.gain_time,'%Y-%m-%d %H:%i:%s') AS gainTime, car.over_time AS overTime,ca.name as name,car.effect_time as effect_time,  ca.award_value*IFNULL(ca.rate_value, 0)  as useValue
    FROM customer_award_relationship car 
    LEFT JOIN customer_award ca ON car.award_id = ca.id
    WHERE car.customer_id = #{customerId} AND #{investMoney} >= ca.award_value*IFNULL(ca.rate_value, 0) AND car.is_valid = 1 AND car.`status` = 0
    and car.over_time>current_timestamp()
    and current_timestamp()>car.effect_time
    AND ( ca.product_scope = 0 OR ca.product_scope LIKE CONCAT('%',#{productType},'%') )
    order BY car.id ASC    
  </select>
  <select id="getCustomerAwardValue" resultType="decimal">
  	SELECT ca.award_value FROM customer_award ca
	LEFT JOIN customer_award_relationship car ON car.award_id = ca.id
	WHERE car.id = #{id} AND ca.type = #{type}
  </select>
  
  <select id="selectAwardIdListByCusId" resultType = "int">
  	select award_id from customer_award_relationship
  	where customer_id = #{id}
  </select>
   <select id="isAlreadyGrantRedPacket" resultType = "int">
  	SELECT count(ar.id) 
	FROM customer_award_relationship ar LEFT JOIN customer_award a ON ar.award_id=a.id 
	where ar.customer_id=#{customerId}
	and a.award_value=#{awardValue}
	and a.name LIKE '%颜值%'
  </select>
  
</mapper>