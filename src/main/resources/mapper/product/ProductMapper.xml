<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hzfh.rest_p2p.product.mapper.ProductMapper">
    <resultMap type="com.hzfh.api.p2pProduct.model.Product" id="resultMapProduct">
        <result property="id" column="id"/>
        <result property="code" column="code"/>
        <result property="name" column="name"/>
        <result property="description" column="description"/>
        <result property="income" column="income"/>
        <result property="floatingIncome" column="floating_income"/>
        <result property="durationDescription" column="duration_description"/>
        <result property="duration" column="duration"/>
        <result property="totalAmount" column="total_amount"/>
        <result property="status" column="status"/>
        <result property="start" column="start" jdbcType="TIMESTAMP" javaType="java.sql.Timestamp"/>
        <result property="end" column="end" jdbcType="TIMESTAMP" javaType="java.sql.Timestamp"/>
        <result property="level" column="level"/>
        <result property="minMoney" column="min_money"/>
        <result property="maxMoney" column="max_money"/>
        <result property="contract" column="contract"/>
        <result property="borrowerUserNo" column="borrower_user_no"/>
        <result property="borrowerUserName" column="borrower_user_name"/>
        <result property="launchTime" column="launch_time" jdbcType="TIMESTAMP" javaType="java.sql.Timestamp"/>
        <result property="collectTime" column="collect_time"/>
        <result property="type" column="type"/>
        <result property="logoPath" column="logo_path"/>
        <result property="activitiNo" column="activiti_no"/>
        <result property="payType" column="pay_type"/>
        <result property="issuerNo" column="issuer_no"/>
        <result property="founder" column="founder"/>
        <result property="principal" column="principal"/>
        <result property="tendType" column="tend_type"/>
        <result property="purpose" column="purpose"/>
        <result property="investmentAmount" column="investment_amount"/>
        <result property="freezeAmount" column="freeze_amount"/>
        <result property="serviceTariffing" column="service_tariffing"/>
        <result property="managementFeeRate" column="management_fee_rate"/>
        <result property="isTest" column="is_test"/>
        <result property="inUserNo" column="in_user_no"/>
        <result property="inTime" column="in_time" jdbcType="TIMESTAMP" javaType="java.sql.Timestamp"/>
        <result property="editUserNo" column="edit_user_no"/>
        <result property="editTime" column="edit_time" jdbcType="TIMESTAMP" javaType="java.sql.Timestamp"/>
        <result property="editComment" column="edit_comment"/>
        <result property="baseNumber" column="base_number"/>
        <result property="hotSale" column="hot_sale"/>
        <result property="recommend" column="recommend"/>
        <result property="paymentSource" column="payment_source"/>
        <result property="information" column="information"/>
        <result property="externalBorrowerName" column="external_borrower_name"/>
        <result property="increase" column="increase"/>
        <result property="autoRepayment" column="auto_repayment"/>
        <result property="bespokeType" column="bespoke_type"/>
        <result property="vCode" column="v_code"/>
        <result property="projectSource" column="project_source"/>
    </resultMap>
    <select id="getList" resultMap="resultMapProduct" parameterType="com.hzfh.api.p2pProduct.model.query.ProductCondition">
        SELECT id,code,name,description,income,floating_income,duration_description,duration,total_amount,status,`start`,`end`,`level`,min_money,contract,borrower_user_no,borrower_user_name,launch_time,collect_time,type,logo_path,activiti_no,pay_type,issuer_no,founder,principal,tend_type,purpose,investment_amount,freeze_amount,service_tariffing,management_fee_rate,is_test,in_user_no,in_time,edit_user_no,edit_time,edit_comment,max_money,base_number,hot_sale,
        recommend,payment_source,information,external_borrower_name,increase,auto_repayment
        FROM product where 1=1
        <if test="recommend != 0">and recommend = ${recommend}</if>
        <if test="productStatus != null and productStatus!=''">and status in(${productStatus})</if>
    </select>
    
   <select id="getPagedList" resultMap="resultMapProduct" parameterType="com.hzfh.api.p2pProduct.model.query.ProductCondition" statementType="STATEMENT">
		SELECT
			id,
			name,
			income,
			duration,
			total_amount AS totalAmount,
			launch_time AS launchTime,
			end,
			type,
			pay_type AS payType,
			status,
		  	floating_income AS floatingIncome,
		 	(
			  total_amount - investment_amount
		  	) AS remainAmount
		FROM
			product
		WHERE 1 = 1
		<if test="page=='productList'">and status &gt;= 20 and (type = 1 or type=3)</if>
		<if test="byTest != 1">and is_test = 0</if>
		<if test="byType != 0">and type=${byType}</if>
		<if test="byStatus != 0 and byStatus != 127 ">and status = ${byStatus}</if>
		<if test="byStatus == 127 ">and status in(32,35,40,50)</if>
		<if test="durationDown != 0">and ${durationDown} &lt;= duration</if>
		<if test="durationUp != 0">and duration &lt; ${durationUp}</if>
		<if test="incomeDown != 0 and incomeDown != null">and ${incomeDown} &lt;= income</if>
		<if test="incomeUp != 0 and incomeUp != null">and income &lt; ${incomeUp}</if>
		ORDER BY
		<foreach item="item" collection="sortItemList" separator=",">
			${item.sortFeild} ${item.sortType}
		</foreach>
		LIMIT ${startIndex},${pageSize}
	</select>
	
	 <select id="getPagedListApp" resultType="map" parameterType="com.hzfh.api.p2pProduct.model.query.ProductCondition" statementType="STATEMENT">
		SELECT
			id,
			name,
			income,
			duration,
			total_amount AS totalAmount,
			launch_time AS launchTime,
			end,
			type,
			pay_type AS payType,
			status,
		  	floating_income AS floatingIncome,
		 	(
			  total_amount - investment_amount
		  	) AS remainAmount,
		  	bespoke_type as bespokeType,
		  	v_code as vCode
		FROM
			product
		WHERE 1 = 1
		<if test="page=='productList'">and status &gt;= 20 and type in(1,3,4,5,6)</if>
		<if test="byTest != 1">and is_test = 0</if>
		<if test="byType != 0">and type=${byType}</if>
		<if test="byStatus != 0 and byStatus != 127 ">and status = ${byStatus}</if>
		<if test="byStatus == 127 ">and status in(32,35,40,50)</if>
		<if test="durationDown != 0">and ${durationDown} &lt;= duration</if>
		<if test="durationUp != 0">and duration &lt; ${durationUp}</if>
		<if test="incomeDown != 0 and incomeDown != null">and ${incomeDown} &lt;= income</if>
		<if test="incomeUp != 0 and incomeUp != null">and income &lt; ${incomeUp}</if>
		ORDER BY
		<foreach item="item" collection="sortItemList" separator=",">
			${item.sortFeild} ${item.sortType}
		</foreach>
		LIMIT ${startIndex},${pageSize}
	</select>
	
	<select id="getTotalCountApp" resultType="long" parameterType="com.hzfh.api.p2pProduct.model.query.ProductCondition" statementType="STATEMENT">
		SELECT count(1) FROM product where 1=1 
		<if test="page=='productList'">and status &gt;= 20 and type in(1,3,4,5,6)</if>
		<if test="byTest != 1">and is_test = 0</if>
		<if test="byType != 0">and type=${byType}</if>
		<if test="byStatus != 0 and byStatus != 127 ">and status = ${byStatus}</if>
		<if test="byStatus == 127 ">and status in(32,35,40,50)</if>
		<if test="durationDown != 0">and ${durationDown} &lt;= duration</if>
		<if test="durationUp != 0">and duration &lt; ${durationUp}</if>
		<if test="incomeDown != 0 and incomeDown != null">and ${incomeDown} &lt;= income</if>
		<if test="incomeUp != 0 and incomeUp != null">and income &lt; ${incomeUp}</if>		
	</select>
	
	<select id="getTotalCount" resultType="long" parameterType="com.hzfh.api.p2pProduct.model.query.ProductCondition" statementType="STATEMENT">
		SELECT count(1) FROM product where 1=1 
		<if test="page=='productList'">and status &gt;= 20 and (type = 1 or type=3)</if>
		<if test="byTest != 1">and is_test = 0</if>
		<if test="byType != 0">and type=${byType}</if>
		<if test="byStatus != 0 and byStatus != 127 ">and status = ${byStatus}</if>
		<if test="byStatus == 127 ">and status in(32,35,40,50)</if>
		<if test="durationDown != 0">and ${durationDown} &lt;= duration</if>
		<if test="durationUp != 0">and duration &lt; ${durationUp}</if>
		<if test="incomeDown != 0 and incomeDown != null">and ${incomeDown} &lt;= income</if>
		<if test="incomeUp != 0 and incomeUp != null">and income &lt; ${incomeUp}</if>		
	</select>	
	
<!--根据Id获取产品信息  -->	
	<select id="getInfo" resultMap="resultMapProduct" parameterType="int">
		SELECT id,code,name,description,income,floating_income,duration_description,duration,total_amount,status,start,end,level,min_money,contract,borrower_user_no,borrower_user_name,launch_time,collect_time,type,logo_path,activiti_no,pay_type,issuer_no,founder,principal,tend_type,purpose,investment_amount,freeze_amount,service_tariffing,management_fee_rate,is_test,in_user_no,in_time,edit_user_no,edit_time,edit_comment,max_money,base_number,hot_sale,recommend,payment_source,information,external_borrower_name,increase,auto_repayment,(total_amount-investment_amount) as remainAmount,bespoke_type,v_code,project_source FROM product where id=#{id}
	</select>
	
	<select id="getInfoApp" resultType="map" parameterType="int">
		SELECT id,name,income,duration,total_amount as totalAmount,start,end,min_money as minMoney,pay_type as payType,status,
		       purpose,payment_source as paymentSource,information,freeze_amount as freezeAmount,
		       investment_amount as investmentAmount,floating_income as floatingIncome,collect_time as collectTime,launch_time as launchTime,
		       (total_amount-investment_amount) as remainAmount,increase,type,operating_conditions as operatingConditions,max_money as maxMoney,bespoke_type as bespokeType,v_code as vCode,project_source as projectSource,borrower_user_name as borrowerUserName
		FROM product 
		WHERE id = #{id}
	</select>
	
	<select id="getFirstProduct" resultMap="resultMapProduct">
		SELECT id,code,name,description,income,floating_income,duration_description,duration,total_amount,status,start,end,level,min_money,contract,borrower_user_no,borrower_user_name,launch_time,collect_time,type,logo_path,activiti_no,pay_type,issuer_no,founder,principal,tend_type,purpose,investment_amount,freeze_amount,service_tariffing,management_fee_rate,is_test,in_user_no,in_time,edit_user_no,edit_time,edit_comment,max_money,base_number,hot_sale,recommend,payment_source,information,external_borrower_name,increase
		FROM `product`  
		where status &gt;=20 and type=4 
		ORDER BY CASE status when 30 then 1 when 32 or 35 then 35 else status end  asc,
		case when status > 30 then launch_time end desc,
		case status when 20 then launch_time end asc,
		case status when 30 then recommend end DESC, hot_sale desc ,DATE_ADD(launch_time, INTERVAL collect_time DAY) asc
		limit 1;
		<!-- type=4 and status &gt;= 30 and status &lt;= 35 
		ORDER BY status ASC, launch_time DESC 
		LIMIT 1; -->
	</select>
	
	<select id="getFirstProductAPP" resultType="map">
		SELECT end,v_code as vCode,bespoke_type as bespokeType,status,id,name,income,floating_income as floatingIncome,duration,total_amount as totalAmount,min_money as minMoney,investment_amount as investmentAmount,type
		FROM `product`  
		where is_test = #{isTest} and status &gt;=20 and type=4 
		ORDER BY CASE status when 30 then 1 when 32 or 35 then 35 else status end  asc,
		case when status > 30 then launch_time end desc,
		case status when 20 then launch_time end asc,
		case status when 30 then recommend end DESC, hot_sale desc ,DATE_ADD(launch_time, INTERVAL collect_time DAY) asc
		limit 1;
		<!-- type=4 and status &gt;= 30 and status &lt;= 35 
		ORDER BY status ASC, launch_time DESC 
		LIMIT 1; -->
	</select>
		
	<update id="updateAutoAuthorizationById">
		update product set auto_repayment = #{autoAuthorization} where id = #{id} 
	</update>
	
	<select id="getRecommendProduct" resultType="map">
	SELECT end,v_code as vCode,bespoke_type as bespokeType,type,status,id, name, income, duration, total_amount AS totalAmount, floating_income AS floatingIncome, min_money AS minMoney, investment_amount AS investmentAmount FROM product
	WHERE STATUS >= 20 AND (type = 1 OR type = 3 OR type = 5 OR type = 6) AND is_test = #{isTest} ORDER BY CASE WHEN STATUS = 30 THEN 1 WHEN STATUS = 32 OR STATUS = 35 THEN 35 ELSE STATUS END ASC,
	recommend DESC, hot_sale DESC, income + floating_income DESC, launch_time ASC LIMIT 0, 1
	</select>
	<update id="updateInestmentAmountById">
		update product set investment_amount=investment_amount+#{investment} where id=#{id};
	</update>
	<update id="updateStatusById">
		update product set status=#{status} where id=#{id};
	</update>	
</mapper>