<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hzfh.rest_p2p.order.mapper.SalesMapper">
	<resultMap type="com.hzfh.api.p2pOrder.model.Sales" id="resultMapSales">
		<result property="id" column="id"/>
		<result property="contract" column="contract"/>
		<result property="productType" column="product_type"/>
		<result property="productNo" column="product_no"/>
		<result property="productName" column="product_name"/>
		<result property="customerType" column="customer_type"/>
		<result property="customerNo" column="customer_no"/>
		<result property="customerName" column="customer_name"/>
		<result property="status" column="status"/>
		<result property="orderAmount" column="order_amount"/>
		<result property="expectedAnnualYield" column="expected_annual_yield"/>
		<result property="investmentDate" column="investment_date" jdbcType="TIMESTAMP" javaType="java.sql.Timestamp"/>
		<result property="paymentDate" column="payment_date" jdbcType="TIMESTAMP" javaType="java.sql.Timestamp"/>
		<result property="expectedClosingDate" column="expected_closing_date" jdbcType="TIMESTAMP" javaType="java.sql.Timestamp"/>
		<result property="establishDate" column="establish_date" jdbcType="TIMESTAMP" javaType="java.sql.Timestamp"/>
		<result property="actualEndDate" column="actual_end_date" jdbcType="TIMESTAMP" javaType="java.sql.Timestamp"/>
		<result property="actualIncomeMoney" column="actual_income_money"/>
		<result property="payingType" column="paying_type"/>
		<result property="isTest" column="is_test"/>
		<result property="baseNumber" column="base_number"/>
		<result property="serviceCharge" column="service_charge"/>
		<result property="managementFee" column="management_fee"/>
		<result property="activitiNo" column="activiti_no"/>
		<result property="sn" column="sn"/>
		<result property="awardRelationshipId" column="award_relationship_id"/>
	</resultMap>
	<select id="getList" resultMap="resultMapSales">
		SELECT id,contract,product_type,product_no,product_name,customer_type,customer_no,customer_name,status,order_amount,expected_annual_yield,investment_date,payment_date,expected_closing_date,establish_date,actual_end_date,actual_income_money,paying_type,is_test,base_number,service_charge,management_fee,activiti_no,sn
		FROM sales
	</select>
	<select id="getListAPP" resultType="map">
		SELECT coalesce(award_relationship_id,0) as awardRelationshipId,id,product_no as productNo,product_name as productName,status,order_amount as orderAmount,expected_annual_yield as expectedAnnualYield,investment_date as investmentDate
		,product_type as productType FROM sales where 1=1 
		<if test="customerNo != null and customerNo !=0">and customer_no = ${customerNo}</if>
		<if test="statusStr!=null and statusStr!=''"> and status in (${statusStr})</if>		
	</select>
	<select id="getPagingList" resultMap="resultMapSales" parameterType="com.hzfh.api.p2pOrder.model.query.SalesCondition" statementType="STATEMENT">
		SELECT id,contract,product_type,product_no,product_name,customer_type,customer_no,customer_name,status,order_amount,expected_annual_yield,investment_date,payment_date,expected_closing_date,establish_date,actual_end_date,actual_income_money,paying_type,is_test,base_number,service_charge,management_fee,activiti_no,sn FROM sales 
		where 1=1 
		<if test="customerNo != null and customerNo !=0">and customer_no = ${customerNo}</if>
		<if test="statusStr!=null and statusStr!=''"> and status in (${statusStr})</if>
        <if test="productNo !=0">and product_no=${productNo}</if>
        <if test="isTest !=-1">and is_test=${isTest}</if>
		ORDER BY
		<foreach item="item" collection="sortItemList" separator=",">
			${item.sortFeild} ${item.sortType}
		</foreach>
		LIMIT ${startIndex},${pageSize}
	</select>
	<select id="getTotalCount" resultType="long" parameterType="com.hzfh.api.p2pOrder.model.query.SalesCondition" statementType="STATEMENT">
		SELECT count(1) FROM sales where 1=1 
		<if test="customerNo != null and customerNo !=0">and customer_no = ${customerNo}</if>
		<if test="statusStr!=null and statusStr!=''"> and status in (${statusStr})</if>
        <if test="productNo !=0">and product_no=${productNo}</if>
        <if test="isTest !=0">and is_test=${isTest}</if>
	</select>
	<select id="getInfo" resultMap="resultMapSales" parameterType="int">
		SELECT id,contract,product_type,product_no,product_name,customer_type,customer_no,customer_name,status,order_amount,expected_annual_yield,investment_date,payment_date,expected_closing_date,establish_date,actual_end_date,actual_income_money,paying_type,is_test,base_number,service_charge,management_fee,activiti_no,sn,award_relationship_id  FROM sales where id=#{id}
	</select>
	<select id="getInfoBySn" resultMap="resultMapSales">
		SELECT id,contract,product_type,product_no,product_name,customer_type,customer_no,customer_name,status,order_amount,expected_annual_yield,investment_date,payment_date,expected_closing_date,establish_date,actual_end_date,actual_income_money,paying_type,is_test,base_number,service_charge,management_fee,activiti_no,sn ,award_relationship_id FROM sales where sn=#{sn}
	</select>
	<insert id="add" parameterType="com.hzfh.api.p2pOrder.model.Sales" useGeneratedKeys="true" keyProperty="id">
		insert into sales
		(contract,product_type,product_no,product_name,customer_type,customer_no,customer_name,status,order_amount,expected_annual_yield,investment_date,payment_date,expected_closing_date,establish_date,actual_end_date,actual_income_money,paying_type,is_test,base_number,service_charge,management_fee,activiti_no,sn,award_relationship_id)
		values
		(#{contract},#{productType},#{productNo},#{productName},#{customerType},#{customerNo},#{customerName},#{status},#{orderAmount},#{expectedAnnualYield},#{investmentDate},#{paymentDate},#{expectedClosingDate},#{establishDate},#{actualEndDate},#{actualIncomeMoney},#{payingType},#{isTest},#{baseNumber},#{serviceCharge},#{managementFee},#{activitiNo},#{sn},#{awardRelationshipId})
	</insert>
	<update id="update" parameterType="com.hzfh.api.p2pOrder.model.Sales">
		update sales set 
		contract=#{contract},product_type=#{productType},product_no=#{productNo},product_name=#{productName},customer_type=#{customerType},customer_no=#{customerNo},customer_name=#{customerName},status=#{status},order_amount=#{orderAmount},expected_annual_yield=#{expectedAnnualYield},investment_date=#{investmentDate},payment_date=#{paymentDate},expected_closing_date=#{expectedClosingDate},establish_date=#{establishDate},actual_end_date=#{actualEndDate},actual_income_money=#{actualIncomeMoney},paying_type=#{payingType},is_test=#{isTest},base_number=#{baseNumber},service_charge=#{serviceCharge},management_fee=#{managementFee},activiti_no=#{activitiNo},sn=#{sn}
		where id=#{id}
	</update>
	
	<delete id="delete" parameterType="int">
		delete from sales where id = #{id}
	</delete>
	<select id="getInvestmentAmountByCustomerNo" resultType="decimal" >
		SELECT COALESCE(SUM(order_amount),0) FROM sales WHERE customer_no=#{customerNo} AND status IN(${salesStatus});
	</select>
	<select id="getUserLevel" resultType="int">
		SELECT 
		case 
		when (select count(*) from sales where customer_no=#{customerNo} and status >= 20)>0 then 2
		when (select count(*) from sales where customer_no=#{customerNo} and (status=10 and investment_date > DATE_SUB(CURRENT_TIMESTAMP(), INTERVAL 100 SECOND)))>0 then 1 
		else 0 end
	</select>
	<select id="getSumAmount" resultType="decimal">
		SELECT IFNULL(sum(order_amount),0.00) as sum_amount from sales where status in (20,30) and customer_no=#{customerNo}
	</select>
	<select id="getPagedList" resultMap="resultMapSales" parameterType="com.hzfh.api.p2pOrder.model.query.SalesCondition">
		SELECT id,contract,product_type,product_no,product_name,customer_type,customer_no,customer_name,status,order_amount,expected_annual_yield,investment_date,payment_date,expected_closing_date,establish_date,actual_end_date,actual_income_money,paying_type,is_test,base_number,service_charge,management_fee,activiti_no,sn FROM sales 
		WHERE 1=1 and status &gt;= 20
		<if test = "isTest != 2">and is_test = 0</if>
		<if test="productNo != 0">and product_no = #{productNo}</if>
		ORDER BY
			payment_date DESC
		LIMIT ${startIndex},${pageSize}
	</select>
	<select id="getPagedListApp" resultType="map" parameterType="com.hzfh.api.p2pOrder.model.query.SalesCondition">
		SELECT customer_no as customerNo,order_amount as orderAmount,investment_date as investmentDate FROM sales 
		WHERE 1=1 and status &gt;= 20
		<if test="isTest != 1">and is_test = 0</if>
		<if test="productNo != 0">and product_no = #{productNo}</if>
		ORDER BY
			payment_date DESC
		LIMIT ${startIndex},${pageSize}
	</select>
	<select id="getCountByProductNo" resultType="long" parameterType="com.hzfh.api.p2pOrder.model.query.SalesCondition" >
		SELECT count(1) FROM sales 
		WHERE 1=1 and status &gt;= 20
		<if test = "isTest != 2">and is_test = 0</if>
        <if test="productNo != 0">and product_no=#{productNo}</if>
	</select>
	<select id="isNovice"  parameterType="int"  resultType="String">
		select 'x' from dual where exists( select 'X' from sales where customer_no=#{customerNo} AND status >= 20)
	</select>
	<select id="awardLimitBySales" resultType="long">	       
	    SELECT COUNT(1)
		FROM sales
		WHERE 1=1
		and STATUS = 10
		and award_relationship_id=#{awardRelationId}
		and investment_date > #{date}
	</select>
	<select id="searchAwardRelationshipId" resultType="map">
		SELECT award_relationship_id FROM sales WHERE STATUS = 20 AND product_no = #{productNo};
	</select>  
	
	<update id="updateStatusByProductNoAndStatus">
		<!-- 40 还款完成 -->
		update sales set status=40 where product_no=#{productNo} and status=#{status}
	</update>   
	   
	<select id="getListByProductNoAndStatus" resultMap="resultMapSales">
		SELECT * FROM sales WHERE STATUS = #{status} AND product_no = #{productNo};
	</select>           
</mapper>