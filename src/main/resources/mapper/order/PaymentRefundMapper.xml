<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hzfh.rest_p2p.order.mapper.PaymentRefundMapper">
	<resultMap type="com.hzfh.api.p2pOrder.model.PaymentRefund" id="resultMapPaymentRefund">
		<result property="id" column="id"/>
		<result property="sn" column="sn"/>
		<result property="salesNo" column="sales_no"/>
		<result property="productNo" column="product_no"/>
		<result property="productName" column="product_name"/>
		<result property="customerNo" column="customer_no"/>
		<result property="customerName" column="customer_name"/>
		<result property="borrowerNo" column="borrower_no"/>
		<result property="borrowerName" column="borrower_name"/>
		<result property="transactionAmount" column="transaction_amount"/>
		<result property="interest" column="interest"/>
		<result property="actualInterest" column="actual_interest"/>
		<result property="paymentAmount" column="payment_amount"/>
		<result property="actualPaymentAmount" column="actual_payment_amount"/>
		<result property="paymentTime" column="payment_time" jdbcType="TIMESTAMP" javaType="java.sql.Timestamp"/>
		<result property="actualPaymentTime" column="actual_payment_time" jdbcType="TIMESTAMP" javaType="java.sql.Timestamp"/>
		<result property="status" column="status"/>
		<result property="effective" column="effective"/>
		<result property="moneyType" column="money_type"/>
		<result property="productPaymentNo" column="product_payment_no"/>
        <result property="breachMoney" column="breach_money"/>
        <result property="penaltyInterest" column="penalty_interest"/>
	</resultMap>
	<select id="getList" resultMap="resultMapPaymentRefund">
		SELECT id,sn,sales_no,product_no,product_name,customer_no,customer_name,borrower_no,borrower_name,transaction_amount,
		interest,payment_amount,actual_payment_amount,payment_time,actual_payment_time,status,effective,actual_interest,money_type,product_payment_no,breach_money,penalty_interest
		FROM payment_refund
	</select>
	<select id="getPagingList" resultMap="resultMapPaymentRefund" parameterType="com.hzfh.api.p2pOrder.model.query.PaymentRefundCondition" statementType="STATEMENT">
		SELECT id,sn,sales_no,product_no,product_name,customer_no,customer_name,borrower_no,borrower_name,transaction_amount,interest,
		payment_amount,actual_payment_amount,payment_time,actual_payment_time,status,effective,actual_interest,
		money_type,product_payment_no,breach_money,penalty_interest FROM payment_refund where 1=1
		ORDER BY
		<foreach item="item" collection="sortItemList" separator=",">
			${item.sortFeild} ${item.sortType}
		</foreach>
		LIMIT ${startIndex},${pageSize}
	</select>
	<select id="getTotalCount" resultType="long" parameterType="com.hzfh.api.p2pOrder.model.query.PaymentRefundCondition" statementType="STATEMENT">
		SELECT count(1) FROM payment_refund where 1=1
	</select>
	<select id="getInfo" resultMap="resultMapPaymentRefund" parameterType="int">
		SELECT id,sn,sales_no,product_no,product_name,customer_no,customer_name,borrower_no,borrower_name,transaction_amount,interest,
		payment_amount,actual_payment_amount,payment_time,actual_payment_time,status,effective,actual_interest,
		money_type,product_payment_no,breach_money,penalty_interest FROM payment_refund where id=#{id}
	</select>
	<select id="getListByProductPaymentNo" resultMap="resultMapPaymentRefund" parameterType="int">
		SELECT id,sn,sales_no,product_no,product_name,customer_no,customer_name,borrower_no,borrower_name,transaction_amount,interest,
		payment_amount,actual_payment_amount,payment_time,actual_payment_time,status,effective,actual_interest,
		money_type,product_payment_no,breach_money,penalty_interest FROM payment_refund where product_payment_no=#{ProductPaymentNo}
	</select>
	<select id="getPaymentRefund" resultMap="resultMapPaymentRefund">
		SELECT pp.product_name as product_name,pr.transaction_amount as transaction_amount,sum(pr.actual_payment_amount) as actual_payment_amount,
		pp.plan_pay_time as payment_time,pp.actual_pay_time as actual_payment_time,pp.status as status,pr.actual_interest as actual_interest,
		sum(pr.breach_money) as breach_money,pr.penalty_interest as penalty_interest,MAX(pp.type) as money_type
		FROM payment_refund pr  LEFT JOIN product_payment_plan pp on pp.id=pr.product_payment_no 
		where pr.customer_no=#{customerNo} and pr.sales_no=#{salesNo}
		GROUP BY actual_pay_time
		ORDER BY actual_pay_time asc
	</select>
	<select id="getPaymentRefundAPP" resultType="map">
		SELECT ifnull(pr.late_fee,0.00) as lateFee,pp.actual_pay_time AS actualPaymentTime,pp.plan_pay_time AS paymentTime, pr.transaction_amount AS transactionAmount,pr.actual_interest as interest, ifnull(pr.penalty_interest,0.00) AS penaltyInterest,
		sum(pr.breach_money) AS breachMoney,pp.STATUS AS status, sum(pr.actual_payment_amount) as actualPaymentAmount,		
		MAX(pp.type) AS moneyType FROM payment_refund pr LEFT JOIN product_payment_plan pp ON pp.id = pr.product_payment_no
		where pr.customer_no=#{customerNo} and pr.sales_no=#{salesNo}
		GROUP BY plan_pay_time
		ORDER BY actual_pay_time asc
	</select>
	<insert id="add" parameterType="com.hzfh.api.p2pOrder.model.PaymentRefund" useGeneratedKeys="true" keyProperty="id">
		insert into payment_refund
		(sn,sales_no,product_no,product_name,customer_no,customer_name,borrower_no,borrower_name,transaction_amount,interest,payment_amount,
		actual_payment_amount,payment_time,actual_payment_time,status,effective,actual_interest,money_type,product_payment_no,breach_money,penalty_interest)
		values
		(#{sn},#{salesNo},#{productNo},#{productName},#{customerNo},#{customerName},#{borrowerNo},#{borrowerName},#{transactionAmount},#{interest},
		#{paymentAmount},#{actualPaymentAmount},#{paymentTime},#{actualPaymentTime},#{status},#{effective},#{actualInterest},
		#{moneyType},#{productPaymentNo},#{breachMoney},#{penaltyInterest})
	</insert>
	<update id="update" parameterType="com.hzfh.api.p2pOrder.model.PaymentRefund">
		update payment_refund set 
		sn=#{sn},sales_no=#{salesNo},product_no=#{productNo},product_name=#{productName},customer_no=#{customerNo},customer_name=#{customerName},
		borrower_no=#{borrowerNo},borrower_name=#{borrowerName},transaction_amount=#{transactionAmount},interest=#{interest},
		money_type=#{moneyType},actual_interest=#{actualInterest},payment_amount=#{paymentAmount},actual_payment_amount=#{actualPaymentAmount},
		payment_time=#{paymentTime},actual_payment_time=#{actualPaymentTime},status=#{status},
		effective=#{effective},product_payment_no=#{productPaymentNo},breach_money=#{breachMoney},penalty_interest=#{penaltyInterest}
		where id=#{id}
	</update>
	<delete id="delete" parameterType="int">
		delete from payment_refund where id = #{id}
	</delete>
	<select id="getIncomeByCustomerNo" resultType="decimal">
		SELECT coalesce(SUM(pr.actual_interest+coalesce(cp.actural_interest,0)+COALESCE (spp.actural_interest, 0)),0) 
		FROM payment_refund pr 
		LEFT JOIN product_payment_plan pp on pr.product_payment_no=pp.id 
		LEFT JOIN coupon_payment_plan cp on pp.id = cp.product_payment_no 
		LEFT JOIN subsidy_payment_plan spp on spp.product_payment_no = pp.id and spp.customer_no = #{customerNo}
		where pr.customer_no =#{customerNo} and pp.status >= 20;
	</select>
	<select id="getIncomeingByCustomerNo" resultType="decimal">
		<!-- SELECT coalesce(SUM(pr.actual_interest+coalesce(cp.actural_interest,0)),0) 
		FROM payment_refund pr LEFT JOIN product_payment_plan pp on pr.product_payment_no=pp.id LEFT JOIN coupon_payment_plan cp on pp.id = cp.product_payment_no 
		where pr.customer_no =#{customerNo} and  (pp.status = 0 or pp.status =10); -->
		SELECT SUM(coalesce(pr.actual_payment_amount,0)+coalesce(cp.actual_payment_amount,0)+coalesce(spp.actual_payment_amount, 0))
		FROM payment_refund pr 
		LEFT JOIN product_payment_plan pp on pr.product_payment_no=pp.id
		LEFT JOIN coupon_payment_plan cp on pp.id = cp.product_payment_no 
		LEFT JOIN subsidy_payment_plan spp on pp.id = spp.product_payment_no and spp.customer_no = #{customerNo}
		where pr.customer_no =#{customerNo} and  (pp.status = 0 or pp.status =10) and pp.type IN(1,3);
	</select>	
	<select id="getSumMoneyByPaymentPlanNo" resultType="decimal">
		SELECT coalesce(SUM(actual_payment_amount),0)  FROM payment_refund where product_payment_no = #{productPaymentNo}
	</select>
	
	<select id="getPaymentRefundBySn" resultMap="resultMapPaymentRefund">
		SELECT pr.customer_no as customer_no,pp.product_name as product_name,pr.transaction_amount as transaction_amount,sum(pr.actual_payment_amount) as actual_payment_amount,
		pp.plan_pay_time as payment_time,pp.actual_pay_time as actual_payment_time,pp.status as status,pr.actual_interest as actual_interest,
		sum(pr.breach_money) as breach_money,pr.penalty_interest as penalty_interest,MAX(pp.type) as money_type
 		FROM payment_refund pr LEFT JOIN product_payment_plan pp on pr.product_payment_no=pp.id 
		where pp.sn = #{sn}
		group by pr.sales_no
	</select>
	
	<select id="getMultiplePaymentPlanBySn" resultMap="resultMapPaymentRefund">
		SELECT
		pr.customer_no AS customer_no,
		pp.product_name AS product_name,
		pr.transaction_amount AS transaction_amount,
		IFNULL(pr.actual_payment_amount,0)+IFNULL(cpp.actual_payment_amount,0)+IFNULL(spp.actual_payment_amount,0) AS actual_payment_amount,
		pp.plan_pay_time AS payment_time,
		pp.actual_pay_time AS actual_payment_time,
		pp. STATUS AS STATUS,
		IFNULL(pr.actual_interest,0)+IFNULL(cpp.actural_interest,0)+IFNULL(spp.actural_interest,0) AS actual_interest,
		sum(pr.breach_money ) AS breach_money,
		pr.penalty_interest AS penalty_interest,
		MAX(pp.type) AS money_type
		FROM
		product_payment_plan pp
		LEFT JOIN payment_refund pr ON pr.product_payment_no = pp.id
		LEFT JOIN coupon_payment_plan cpp on cpp.product_payment_no = pp.id and pr.customer_no = cpp.customer_no
		LEFT JOIN subsidy_payment_plan spp on spp.product_payment_no = pp.id and pr.customer_no = spp.customer_no
		WHERE
			 pp.sn = #{sn}
		GROUP BY
			pr.sales_no
	</select>
	
	<!-- 累计投资收益 -->
	<select id="paymentIncome" resultType="decimal">
		SELECT IFNULL(sum(pr.actual_interest),0) 
		from product_payment_plan pp 
		LEFT JOIN payment_refund pr on pr.product_payment_no = pp.id
		WHERE pr.customer_no = #{customerNo} and pp.`status` >= 20
	</select>
	<!-- 累计平台贴息收益 -->
	<select id="subsidyIncome" resultType="decimal">
		SELECT IFNULL(SUM(spp.actural_interest),0) 
		from product_payment_plan pp 
		LEFT JOIN subsidy_payment_plan spp on spp.product_payment_no = pp.id
		WHERE spp.customer_no = #{customerNo} and pp.`status` >= 20
	</select>
	<!-- 累计加息券收益 -->
	<select id="couponIncome" resultType="decimal">
		SELECT IFNULL(sum(cpp.actural_interest),0) 
		from product_payment_plan pp 
		LEFT JOIN coupon_payment_plan cpp on cpp.product_payment_no = pp.id 
		WHERE cpp.customer_no = #{customerNo} and pp.`status` >= 20
	</select>

	

	
	
	<!-- 待收投资收益 -->
	<select id="paymentIncoming" resultType="decimal">
		SELECT
		sum(pr.actual_payment_amount)
		FROM
		product_payment_plan pp
		LEFT JOIN payment_refund pr on pr.product_payment_no = pp.id 
		WHERE
		pr.customer_no = #{customerNo} and (pp.STATUS = 0 OR pp.STATUS = 10)
		AND pp.type IN (1, 3);
	</select>
	
	<!-- 待收平台贴息收益 -->
	<select id="subsidyIncoming" resultType="decimal">
		SELECT
		sum(spp.actual_payment_amount)
		FROM
		product_payment_plan pp
		LEFT JOIN subsidy_payment_plan spp on spp.product_payment_no = pp.id 
		WHERE
		spp.customer_no = #{customerNo} and (pp.STATUS = 0 OR pp.STATUS = 10)
		AND pp.type IN (1, 3);
	</select>
	
	<!-- 待收加息券收益 -->
	<select id="couponIncoming" resultType="decimal">
		SELECT
		sum(cp.actual_payment_amount)
		FROM
		product_payment_plan pp
		LEFT JOIN coupon_payment_plan cp on cp.product_payment_no = pp.id 
		WHERE
		cp.customer_no = #{customerNo} and (pp.STATUS = 0 OR pp.STATUS = 10)
		AND pp.type IN (1, 3);
	</select>
	
	<select id="paymentIncomeDayNum" resultType="decimal">
		SELECT IFNULL(sum(pr.actual_interest),0) from product_payment_plan pp LEFT JOIN payment_refund pr on pr.product_payment_no = pp.id
		WHERE pr.customer_no = #{customerNo} and pp.`status` >= 20 And PERIOD_DIFF( date_format( now( ) , '%Y%m' ) , date_format( pp.actual_pay_time, '%Y%m' ) ) =#{dayNum}
	</select>
	<select id="subsidyIncomeDayNum" resultType="decimal">
		SELECT IFNULL(SUM(spp.actural_interest),0) from product_payment_plan pp  LEFT JOIN subsidy_payment_plan spp on spp.product_payment_no = pp.id
		WHERE spp.customer_no = #{customerNo} and pp.`status` >= 20 And PERIOD_DIFF( date_format( now( ) , '%Y%m' ) , date_format( pp.actual_pay_time, '%Y%m' ) ) =#{dayNum}
	</select>
	<select id="couponIncomeDayNum" resultType="decimal">
		SELECT IFNULL(sum(cpp.actural_interest),0)  from product_payment_plan pp  LEFT JOIN coupon_payment_plan cpp on cpp.product_payment_no = pp.id 
		WHERE cpp.customer_no = #{customerNo} and pp.`status` >= 20 And PERIOD_DIFF( date_format( now( ) , '%Y%m' ) , date_format( pp.actual_pay_time, '%Y%m' ) ) =#{dayNum}
	</select>
	<select id="paymentIncomingDayNum" resultType="decimal">
		SELECT sum(pr.actual_payment_amount) FROM product_payment_plan pp LEFT JOIN payment_refund pr on pr.product_payment_no = pp.id 
		WHERE pr.customer_no = #{customerNo} and (pp.STATUS = 0 OR pp.STATUS = 10) AND pp.type IN (1, 3) And PERIOD_DIFF( date_format( now( ) , '%Y%m' ) , date_format( pp.actual_pay_time, '%Y%m' ) ) =#{dayNum}
	</select>
	<select id="subsidyIncomingDayNum" resultType="decimal">
		SELECT sum(spp.actual_payment_amount) FROM product_payment_plan pp LEFT JOIN subsidy_payment_plan spp on spp.product_payment_no = pp.id 
		WHERE spp.customer_no = #{customerNo} and (pp.STATUS = 0 OR pp.STATUS = 10) AND pp.type IN (1, 3) And PERIOD_DIFF( date_format( now( ) , '%Y%m' ) , date_format( pp.actual_pay_time, '%Y%m' ) ) =#{dayNum}
	</select>
	<select id="couponIncomingDayNum" resultType="decimal">
		SELECT sum(cp.actual_payment_amount) FROM product_payment_plan pp LEFT JOIN coupon_payment_plan cp on cp.product_payment_no = pp.id 
		WHERE cp.customer_no = #{customerNo} and (pp.STATUS = 0 OR pp.STATUS = 10) AND pp.type IN (1, 3) And PERIOD_DIFF( date_format( now( ) , '%Y%m' ) , date_format( pp.actual_pay_time, '%Y%m' ) ) =#{dayNum}
	</select>
	
	<update id="updateLateFeeAndPenalty" >
		UPDATE payment_refund SET penalty_interest = #{penalty},late_fee = #{lateFee},actual_payment_time = CURRENT_TIME() where id = #{id}
	</update>
	
	
</mapper>